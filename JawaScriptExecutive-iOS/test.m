//
//  test.m
//  JawaScriptExecutive-iOS
//
//  Created by Ben on 2016/1/30.
//
//

#import <Foundation/Foundation.h>
#import "JawaExecutor.h"
#import "utility.h"

BOOL test1() {
    JawaExecutor* ex = [[JawaExecutor alloc]init];
    NSString *parsed = @"{\"t\":0,\"0\":[{\"t\":21,\"2\":{\"t\":26,\"2\":[{\"t\":25,\"8\":\"STRING_LITERAL,aaa\"}]},\"12\":{\"t\":24,\"3\":\"alert\"}}]}";
    NSDictionary* prog = jsonToDictionary(parsed);
    
    [ex execute:prog];
    printf("Test 1 passed.\n");
    return true;
}

BOOL test2() {
    JawaExecutor* ex = [[JawaExecutor alloc]init];
    NSString *parsed = @"{\"t\":0,\"0\":[{\"t\":37,\"33\":[{\"t\":34,\"26\":\"arr\",\"27\":{\"t\":27,\"7\":[{\"t\":25,\"8\":\"NUMERIC_LITERAL,5.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,1.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,6.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,2.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,9.0\"}]}}]},{\"t\":1,\"3\":\"insertion_sort\",\"23\":[\"arr\"],\"24\":{\"t\":2,\"0\":[{\"t\":33,\"24\":{\"t\":2,\"0\":[{\"t\":37,\"33\":[{\"t\":34,\"26\":\"min\",\"27\":{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"i\"}}}]},{\"t\":37,\"33\":[{\"t\":34,\"26\":\"minp\",\"27\":{\"t\":24,\"3\":\"i\"}}]},{\"t\":33,\"24\":{\"t\":2,\"0\":[{\"t\":35,\"18\":{\"t\":2,\"0\":[{\"t\":5,\"14\":\"PUNCTUATOR,=\",\"20\":{\"t\":24,\"3\":\"min\"},\"21\":{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"j\"}}},{\"t\":5,\"14\":\"PUNCTUATOR,=\",\"20\":{\"t\":24,\"3\":\"minp\"},\"21\":{\"t\":24,\"3\":\"j\"}}]},\"25\":{\"t\":13,\"15\":[{\"t\":5,\"v\":\"<\"}],\"16\":[{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"j\"}},{\"t\":24,\"3\":\"min\"}]}}]},\"25\":{\"t\":13,\"15\":[{\"t\":5,\"v\":\"<\"}],\"16\":[{\"t\":24,\"3\":\"j\"},{\"t\":20,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"length\"}}]},\"30\":[{\"t\":34,\"26\":\"j\",\"27\":{\"t\":16,\"15\":[{\"t\":5,\"v\":\"+\"}],\"16\":[{\"t\":24,\"3\":\"i\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,1.0\"}]}}],\"31\":{\"t\":19,\"13\":{\"t\":24,\"3\":\"j\"},\"14\":\"PUNCTUATOR,++\"}},{\"t\":5,\"14\":\"PUNCTUATOR,=\",\"20\":{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"minp\"}},\"21\":{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"i\"}}},{\"t\":5,\"14\":\"PUNCTUATOR,=\",\"20\":{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"i\"}},\"21\":{\"t\":24,\"3\":\"min\"}}]},\"25\":{\"t\":13,\"15\":[{\"t\":5,\"v\":\"<\"}],\"16\":[{\"t\":24,\"3\":\"i\"},{\"t\":20,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"length\"}}]},\"30\":[{\"t\":34,\"26\":\"i\",\"27\":{\"t\":25,\"8\":\"NUMERIC_LITERAL,0.0\"}}],\"31\":{\"t\":19,\"13\":{\"t\":24,\"3\":\"i\"},\"14\":\"PUNCTUATOR,++\"}}]}},{\"t\":1,\"3\":\"test\",\"23\":[],\"24\":{\"t\":2,\"0\":[{\"t\":37,\"33\":[{\"t\":34,\"26\":\"ret\",\"27\":{\"t\":25,\"8\":\"STRING_LITERAL,\"}}]},{\"t\":21,\"2\":{\"t\":26,\"2\":[{\"t\":24,\"3\":\"arr\"}]},\"12\":{\"t\":24,\"3\":\"insertion_sort\"}},{\"t\":33,\"24\":{\"t\":5,\"14\":\"PUNCTUATOR,+=\",\"20\":{\"t\":24,\"3\":\"ret\"},\"21\":{\"t\":16,\"15\":[{\"t\":5,\"v\":\"+\"}],\"16\":[{\"t\":25,\"8\":\"STRING_LITERAL, \"},{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"i\"}}]}},\"25\":{\"t\":13,\"15\":[{\"t\":5,\"v\":\"<\"}],\"16\":[{\"t\":24,\"3\":\"i\"},{\"t\":20,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"length\"}}]},\"30\":[{\"t\":34,\"26\":\"i\",\"27\":{\"t\":25,\"8\":\"NUMERIC_LITERAL,0.0\"}}],\"31\":{\"t\":19,\"13\":{\"t\":24,\"3\":\"i\"},\"14\":\"PUNCTUATOR,++\"}},{\"t\":36,\"32\":{\"t\":24,\"3\":\"ret\"}}]}}]}";
    
    NSDictionary* prog = jsonToDictionary(parsed);
    NSString *answer = @"{\"retType\":\"string\",\"retValue\":\" 1 2 5 6 9\"}";
    
    [ex execute:prog];
    NSMutableDictionary* result = [ex invoke:@"test" with:nil];
    NSString *actual = dictionaryToJSON(result);

    if (![actual isEqualToString:answer]) {
        printf("Test 2 failed!\n");
        printf("Expected : %s\n", [answer UTF8String]);
        printf("Actual : %s\n", [actual UTF8String]);
        return false;
    }
    printf("Test 2 passed.\n");
    return true;
}

BOOL test3() {
    JawaExecutor* ex = [[JawaExecutor alloc]init];
    NSString *parsed = @"{\"t\":0,\"0\":[{\"t\":37,\"33\":[{\"t\":34,\"26\":\"arr\",\"27\":{\"t\":27,\"7\":[{\"t\":25,\"8\":\"NUMERIC_LITERAL,454.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,527.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,739.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,945.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,903.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,660.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,348.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,103.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,494.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,182.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,607.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,297.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,301.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,598.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,255.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,461.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,575.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,59.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,865.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,161.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,57.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,131.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,980.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,832.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,251.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,639.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,180.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,265.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,582.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,898.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,333.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,906.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,63.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,40.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,462.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,920.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,440.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,722.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,852.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,49.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,151.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,577.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,30.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,516.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,352.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,756.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,943.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,328.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,923.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,253.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,779.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,814.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,452.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,956.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,881.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,905.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,961.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,543.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,329.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,458.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,520.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,139.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,129.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,993.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,203.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,723.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,682.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,931.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,896.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,475.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,457.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,224.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,907.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,506.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,167.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,969.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,712.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,320.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,792.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,675.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,341.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,949.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,90.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,757.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,557.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,515.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,744.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,456.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,567.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,646.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,820.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,478.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,928.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,785.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,600.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,414.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,209.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,73.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,629.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,746.0\"}]}}]},{\"t\":1,\"3\":\"insertion_sort\",\"23\":[\"arr\"],\"24\":{\"t\":2,\"0\":[{\"t\":33,\"24\":{\"t\":2,\"0\":[{\"t\":37,\"33\":[{\"t\":34,\"26\":\"min\",\"27\":{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"i\"}}}]},{\"t\":37,\"33\":[{\"t\":34,\"26\":\"minp\",\"27\":{\"t\":24,\"3\":\"i\"}}]},{\"t\":33,\"24\":{\"t\":2,\"0\":[{\"t\":35,\"18\":{\"t\":2,\"0\":[{\"t\":5,\"14\":\"PUNCTUATOR,=\",\"20\":{\"t\":24,\"3\":\"min\"},\"21\":{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"j\"}}},{\"t\":5,\"14\":\"PUNCTUATOR,=\",\"20\":{\"t\":24,\"3\":\"minp\"},\"21\":{\"t\":24,\"3\":\"j\"}}]},\"25\":{\"t\":13,\"15\":[{\"t\":5,\"v\":\"<\"}],\"16\":[{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"j\"}},{\"t\":24,\"3\":\"min\"}]}}]},\"25\":{\"t\":13,\"15\":[{\"t\":5,\"v\":\"<\"}],\"16\":[{\"t\":24,\"3\":\"j\"},{\"t\":20,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"length\"}}]},\"30\":[{\"t\":34,\"26\":\"j\",\"27\":{\"t\":16,\"15\":[{\"t\":5,\"v\":\"+\"}],\"16\":[{\"t\":24,\"3\":\"i\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,1.0\"}]}}],\"31\":{\"t\":19,\"13\":{\"t\":24,\"3\":\"j\"},\"14\":\"PUNCTUATOR,++\"}},{\"t\":5,\"14\":\"PUNCTUATOR,=\",\"20\":{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"minp\"}},\"21\":{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"i\"}}},{\"t\":5,\"14\":\"PUNCTUATOR,=\",\"20\":{\"t\":22,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"i\"}},\"21\":{\"t\":24,\"3\":\"min\"}}]},\"25\":{\"t\":13,\"15\":[{\"t\":5,\"v\":\"<\"}],\"16\":[{\"t\":24,\"3\":\"i\"},{\"t\":20,\"10\":{\"t\":24,\"3\":\"arr\"},\"11\":{\"t\":24,\"3\":\"length\"}}]},\"30\":[{\"t\":34,\"26\":\"i\",\"27\":{\"t\":25,\"8\":\"NUMERIC_LITERAL,0.0\"}}],\"31\":{\"t\":19,\"13\":{\"t\":24,\"3\":\"i\"},\"14\":\"PUNCTUATOR,++\"}}]}},{\"t\":1,\"3\":\"test\",\"23\":[],\"24\":{\"t\":2,\"0\":[{\"t\":37,\"33\":[{\"t\":34,\"26\":\"ret\",\"27\":{\"t\":25,\"8\":\"STRING_LITERAL,\"}}]},{\"t\":21,\"2\":{\"t\":26,\"2\":[{\"t\":24,\"3\":\"arr\"}]},\"12\":{\"t\":24,\"3\":\"insertion_sort\"}},{\"t\":36,\"32\":{\"t\":24,\"3\":\"arr\"}}]}}]}";
    
    NSDictionary* prog = jsonToDictionary(parsed);
    NSString *answer = @"{\"retType\":\"array\",\"retValue\":[30,40,49,57,59,63,73,90,103,129,131,139,151,161,167,180,182,203,209,224,251,253,255,265,297,301,320,328,329,333,341,348,352,414,440,452,454,456,457,458,461,462,475,478,494,506,515,516,520,527,543,557,567,575,577,582,598,600,607,629,639,646,660,675,682,712,722,723,739,744,746,756,757,779,785,792,814,820,832,852,865,881,896,898,903,905,906,907,920,923,928,931,943,945,949,956,961,969,980,993]}";
    
    [ex execute:prog];
    NSMutableDictionary* result = [ex invoke:@"test" with:nil];
    NSString *actual = dictionaryToJSON(result);
    
    if (![actual isEqualToString:answer]) {
        printf("Test 3 failed!\n");
        printf("Expected : %s\n", [answer UTF8String]);
        printf("Actual : %s\n", [actual UTF8String]);
        return false;
    }
    printf("Test 3 passed.\n");
    return true;
}

BOOL test4() {
    JawaExecutor* ex = [[JawaExecutor alloc]init];
    NSString *parsed = @"{\"t\":0,\"0\":[{\"t\":37,\"33\":[{\"t\":34,\"26\":\"a\",\"27\":{\"t\":28,\"6\":[{\"t\":39,\"4\":\"first\",\"5\":{\"t\":27,\"7\":[{\"t\":25,\"8\":\"STRING_LITERAL,a\"},{\"t\":25,\"8\":\"STRING_LITERAL,b\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,1.0\"}]}},{\"t\":39,\"4\":\"second\",\"5\":{\"t\":28,\"6\":[{\"t\":39,\"4\":\"inner\",\"5\":{\"t\":27,\"7\":[{\"t\":25,\"8\":\"STRING_LITERAL,a\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,1.0\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,2.0\"}]}}]}}]}}]}]}";
    
    NSDictionary* prog = jsonToDictionary(parsed);
    
    [ex execute:prog];
    printf("Test 4 passed.\n");
    return true;
}

BOOL test5() {
    JawaExecutor* ex = [[JawaExecutor alloc]init];
    NSString *parsed = @"{\"t\":0,\"0\":[{\"t\":1,\"3\":\"test\",\"23\":[\"a\",\"b\",\"c\"],\"24\":{\"t\":2,\"0\":[{\"t\":36,\"32\":{\"t\":15,\"15\":[{\"t\":5,\"v\":\">>\"}],\"16\":[{\"t\":17,\"15\":[{\"t\":5,\"v\":\"*\"}],\"16\":[{\"t\":24,\"3\":\"a\"},{\"t\":16,\"15\":[{\"t\":5,\"v\":\"+\"}],\"16\":[{\"t\":24,\"3\":\"b\"},{\"t\":24,\"3\":\"c\"}]}]},{\"t\":25,\"8\":\"NUMERIC_LITERAL,2.0\"}]}}]}},{\"t\":1,\"3\":\"test2\",\"23\":[\"x\"],\"24\":{\"t\":2,\"0\":[{\"t\":36,\"32\":{\"t\":21,\"2\":{\"t\":26,\"2\":[{\"t\":24,\"3\":\"x\"},{\"t\":17,\"15\":[{\"t\":5,\"v\":\"*\"}],\"16\":[{\"t\":25,\"8\":\"NUMERIC_LITERAL,2.0\"},{\"t\":24,\"3\":\"x\"}]},{\"t\":17,\"15\":[{\"t\":5,\"v\":\"*\"}],\"16\":[{\"t\":25,\"8\":\"NUMERIC_LITERAL,3.0\"},{\"t\":24,\"3\":\"x\"}]}]},\"12\":{\"t\":24,\"3\":\"test\"}}}]}},{\"t\":1,\"3\":\"test3\",\"23\":[],\"24\":{\"t\":2,\"0\":[{\"t\":37,\"33\":[{\"t\":34,\"26\":\"xxx\",\"27\":{\"t\":21,\"2\":{\"t\":26,\"2\":[{\"t\":25,\"8\":\"NUMERIC_LITERAL,2.0\"}]},\"12\":{\"t\":24,\"3\":\"test2\"}}}]},{\"t\":36,\"32\":{\"t\":24,\"3\":\"xxx\"}}]}}]}";
    
    NSDictionary* prog = jsonToDictionary(parsed);
    NSString *answer = @"{\"retType\":\"number\",\"retValue\":5}";
    
    [ex execute:prog];
    NSMutableDictionary* result = [ex invoke:@"test3" with:nil];
    NSString *actual = dictionaryToJSON(result);
    
    if (![actual isEqualToString:answer]) {
        printf("Test 5 failed!\n");
        printf("Expected : %s\n", [answer UTF8String]);
        printf("Actual : %s\n", [actual UTF8String]);
        return false;
    }
    printf("Test 5 passed.\n");
    return true;
}

BOOL test6() {
    JawaExecutor* ex = [[JawaExecutor alloc]init];
    NSString *parsed = @"{\"t\":0,\"0\":[{\"t\":1,\"3\":\"test\",\"23\":[],\"24\":{\"t\":2,\"0\":[{\"t\":37,\"33\":[{\"t\":34,\"26\":\"ret\",\"27\":{\"t\":25,\"8\":\"STRING_LITERAL,\"}}]},{\"t\":37,\"33\":[{\"t\":34,\"26\":\"a\",\"27\":{\"t\":25,\"8\":\"NUMERIC_LITERAL,1.0\"}},{\"t\":34,\"26\":\"b\",\"27\":{\"t\":25,\"8\":\"NUMERIC_LITERAL,2.0\"}}]},{\"t\":21,\"2\":{\"t\":26,\"2\":[{\"t\":7,\"16\":[{\"t\":12,\"15\":[{\"t\":5,\"v\":\"==\"}],\"16\":[{\"t\":24,\"3\":\"a\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,2.0\"}]},{\"t\":8,\"16\":[{\"t\":12,\"15\":[{\"t\":5,\"v\":\"==\"}],\"16\":[{\"t\":24,\"3\":\"b\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,1.0\"}]},{\"t\":12,\"15\":[{\"t\":5,\"v\":\"==\"}],\"16\":[{\"t\":24,\"3\":\"a\"},{\"t\":24,\"3\":\"b\"}]}]}]}]},\"12\":{\"t\":24,\"3\":\"alert\"}},{\"t\":5,\"14\":\"PUNCTUATOR,+=\",\"20\":{\"t\":24,\"3\":\"ret\"},\"21\":{\"t\":7,\"16\":[{\"t\":12,\"15\":[{\"t\":5,\"v\":\"==\"}],\"16\":[{\"t\":24,\"3\":\"a\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,2.0\"}]},{\"t\":8,\"16\":[{\"t\":12,\"15\":[{\"t\":5,\"v\":\"==\"}],\"16\":[{\"t\":24,\"3\":\"b\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,1.0\"}]},{\"t\":12,\"15\":[{\"t\":5,\"v\":\"==\"}],\"16\":[{\"t\":24,\"3\":\"a\"},{\"t\":24,\"3\":\"b\"}]}]}]}},{\"t\":5,\"14\":\"PUNCTUATOR,=\",\"20\":{\"t\":24,\"3\":\"a\"},\"21\":{\"t\":6,\"17\":{\"t\":12,\"15\":[{\"t\":5,\"v\":\"==\"}],\"16\":[{\"t\":24,\"3\":\"b\"},{\"t\":25,\"8\":\"NUMERIC_LITERAL,2.0\"}]},\"18\":{\"t\":25,\"8\":\"STRING_LITERAL,XX\"},\"19\":{\"t\":25,\"8\":\"NUMERIC_LITERAL,4.0\"}}},{\"t\":21,\"2\":{\"t\":26,\"2\":[{\"t\":24,\"3\":\"a\"}]},\"12\":{\"t\":24,\"3\":\"alert\"}},{\"t\":5,\"14\":\"PUNCTUATOR,+=\",\"20\":{\"t\":24,\"3\":\"ret\"},\"21\":{\"t\":16,\"15\":[{\"t\":5,\"v\":\"+\"}],\"16\":[{\"t\":25,\"8\":\"STRING_LITERAL, \"},{\"t\":24,\"3\":\"a\"}]}},{\"t\":4,\"22\":[{\"t\":5,\"14\":\"PUNCTUATOR,=\",\"20\":{\"t\":24,\"3\":\"b\"},\"21\":{\"t\":25,\"8\":\"STRING_LITERAL,xx\"}},{\"t\":5,\"14\":\"PUNCTUATOR,=\",\"20\":{\"t\":24,\"3\":\"a\"},\"21\":{\"t\":25,\"8\":\"STRING_LITERAL,yy\"}}]},{\"t\":21,\"2\":{\"t\":26,\"2\":[{\"t\":24,\"3\":\"a\"}]},\"12\":{\"t\":24,\"3\":\"alert\"}},{\"t\":5,\"14\":\"PUNCTUATOR,+=\",\"20\":{\"t\":24,\"3\":\"ret\"},\"21\":{\"t\":16,\"15\":[{\"t\":5,\"v\":\"+\"}],\"16\":[{\"t\":25,\"8\":\"STRING_LITERAL, \"},{\"t\":24,\"3\":\"a\"}]}},{\"t\":21,\"2\":{\"t\":26,\"2\":[{\"t\":24,\"3\":\"b\"}]},\"12\":{\"t\":24,\"3\":\"alert\"}},{\"t\":5,\"14\":\"PUNCTUATOR,+=\",\"20\":{\"t\":24,\"3\":\"ret\"},\"21\":{\"t\":16,\"15\":[{\"t\":5,\"v\":\"+\"}],\"16\":[{\"t\":25,\"8\":\"STRING_LITERAL, \"},{\"t\":24,\"3\":\"b\"}]}},{\"t\":36,\"32\":{\"t\":24,\"3\":\"ret\"}}]}}]}";
    
    NSDictionary* prog = jsonToDictionary(parsed);
    NSString *answer = @"{\"retType\":\"string\",\"retValue\":\"false XX yy xx\"}";
    
    [ex execute:prog];
    NSMutableDictionary* result = [ex invoke:@"test" with:nil];
    NSString *actual = dictionaryToJSON(result);
    
    if (![actual isEqualToString:answer]) {
        printf("Test 6 failed!\n");
        printf("Expected : %s\n", [answer UTF8String]);
        printf("Actual : %s\n", [actual UTF8String]);
        return false;
    }
    printf("Test 6 passed.\n");
    return true;
}

int main(int argc, char *argv[]) {
    @autoreleasepool {
        if (!test1()) return -1;
        if (!test2()) return -1;
        if (!test3()) return -1;
        if (!test4()) return -1;
        if (!test5()) return -1;
        if (!test6()) return -1;
    }
    return 0;
}

// Test